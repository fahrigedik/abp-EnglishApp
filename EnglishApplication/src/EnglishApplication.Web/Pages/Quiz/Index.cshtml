@page
@using EnglishApplication.Localization
@using Microsoft.Extensions.Localization
@model EnglishApplication.Web.Pages.Quiz.IndexModel
@inject IStringLocalizer<EnglishApplicationResource> L

@{
    ViewData["Title"] = L["QuizQuestion"];
}

<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-md-10">
            <div class="card shadow-sm rounded-lg">
                <div class="card-header bg-primary text-white py-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <h4 class="mb-0">@L["QuizQuestion"]</h4>
                        <div class="quiz-info">
                            <span class="badge bg-light text-primary">
                                <i class="fas fa-layer-group me-1"></i> Flash Cards
                            </span>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    @if (Model.CurrentQuestion != null)
                    {
                        <div class="quiz-container">
                            <div class="word-container text-center mb-4">
                                <h5 class="text-muted mb-2">@L["TranslateThisWord"]</h5>
                                <h2 class="fw-bold mb-3">@Model.CurrentQuestion.EnglishWord</h2>
                                @if (!string.IsNullOrEmpty(Model.CurrentQuestion.Picture))
                                {
                                    <div class="image-container mb-3">
                                        <img src="@Model.CurrentQuestion.Picture" alt="Word image"
                                             class="img-fluid rounded shadow-sm"
                                             style="max-height: 180px; object-fit: contain;" />
                                    </div>
                                }
                            </div>

                            <form method="post" class="options-container">
                                <input type="hidden" asp-for="Answer.QuizAttemptId" value="@Model.CurrentQuestion.QuizAttemptId" />

                                <div class="row g-3">
                                    @for (int i = 0; i < Model.CurrentQuestion.Options.Count; i++)
                                    {
                                        int optionIndex = i;
                                        <div class="col-md-6 mb-2">
                                            <div class="option-wrapper">
                                                <input class="option-input" type="radio" asp-for="Answer.SelectedOptionIndex"
                                                       id="option_@optionIndex" value="@optionIndex" />
                                                <label class="option-card p-3 h-100 w-100" for="option_@optionIndex">
                                                    <div class="option-number">@(optionIndex + 1)</div>
                                                    <div class="option-text">@Model.CurrentQuestion.Options[optionIndex]</div>
                                                </label>
                                            </div>
                                        </div>
                                    }
                                </div>

                                <div class="mt-4 text-center">
                                    <button type="submit" class="btn btn-primary px-4">
                                        <i class="fas fa-check-circle me-1"></i> @L["CheckAnswer"]
                                    </button>
                                </div>
                            </form>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">
                            <h3>@L["NoQuestionsAvailable"]</h3>
                            <p>@L["YouHaveCompletedAllQuestions"]</p>
                            <a asp-page="/Quiz/Start" class="btn btn-primary mt-3">@L["BackToStart"]</a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    /* Card styling */
    .card {
        border: none;
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.08);
        overflow: hidden;
    }

    .card-header {
        border-bottom: none;
    }

    /* Image container */
    .image-container {
        background-color: rgba(0,0,0,0.03);
        padding: 12px;
        border-radius: 8px;
        display: flex;
        justify-content: center;
        max-width: 80%;
        margin: 0 auto;
    }

    /* Quiz Options Styling */
    .option-wrapper {
        position: relative;
        display: block;
        height: 100%;
    }

    .option-input {
        position: absolute;
        opacity: 0;
        cursor: pointer;
    }

    .option-card {
        display: block;
        border: 2px solid #e9ecef;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.2s ease;
        position: relative;
        overflow: hidden;
        background-color: #fff;
    }

        .option-card:hover {
            border-color: #ced4da;
            transform: translateY(-2px);
            box-shadow: 0 3px 6px rgba(0,0,0,0.08);
        }

    /* Styling for selected option */
    .option-input:checked + .option-card {
        border-color: #007bff;
        background-color: #e6f2ff;
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,123,255,0.15);
    }

        .option-input:checked + .option-card .option-number {
            background-color: #0056b3;
            transform: scale(1.05);
        }

        .option-input:checked + .option-card .option-text {
            font-weight: bold;
            color: #0056b3;
        }

    .option-number {
        position: absolute;
        top: 8px;
        left: 8px;
        width: 24px;
        height: 24px;
        border-radius: 50%;
        background-color: #007bff;
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        font-size: 0.85rem;
        transition: all 0.3s ease;
    }

    .option-text {
        font-size: 1.05rem;
        padding-left: 32px;
        padding-top: 2px;
        transition: color 0.3s ease;
        word-wrap: break-word;
    }

    /* Button styling */
    .btn-primary {
        border-radius: 6px;
        font-weight: 500;
        transition: all 0.2s;
    }

        .btn-primary:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 8px rgba(0,123,255,0.2);
        }

</style>

@section Scripts {
    <script>
        $(function() {
            // Şık bir kere seçildikten sonra, "Kontrol Et" butonuna otomatik odaklan
            $('.option-input').change(function() {
                // Tüm option-card sınıflarından option-selected sınıfını kaldır
                $('.option-card').removeClass('option-selected');

                // Seçilen option-card'a option-selected sınıfını ekle
                $(this).next('.option-card').addClass('option-selected');

                // Kontrol Et butonuna odaklan
                setTimeout(function() {
                    $('button[type="submit"]').focus();
                }, 300);
            });

            // Tıklandığında radio butonunu işaretle
            $('.option-card').click(function() {
                $(this).prev('.option-input').prop('checked', true).trigger('change');
            });
        });
    </script>
}
