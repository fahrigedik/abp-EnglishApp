@page
@using EnglishApplication.Localization
@using Microsoft.Extensions.Localization
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Card
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Grid
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Modal
@model EnglishApplication.Web.Pages.WordSamples.WordSamplesModalModel
@inject IStringLocalizer<EnglishApplicationResource> L
@{
    Layout = null;
}

<abp-modal static="false" keyboard="true">
    <abp-modal-body>
        <input type="hidden" id="CurrentWordId" value="@Model.WordId" />

        <abp-card>
            <abp-card-header>
                <abp-row>
                    <abp-column size-xl="_6">
                        <abp-card-title>@L["Word Samples"]</abp-card-title>
                    </abp-column>
                    <abp-column size-xl="_6" class="text-end">
                        <abp-button id="NewWordSampleButton"
                                    text="@L["NewWordSample"].Value"
                                    icon="plus"
                                    button-type="Primary" />
                    </abp-column>
                </abp-row>
            </abp-card-header>

            <abp-card-body>
                <abp-table striped-rows="true" id="WordSamplesTable"></abp-table>
            </abp-card-body>
        </abp-card>
    </abp-modal-body>
    <abp-modal-footer buttons="@AbpModalButtons.Close"></abp-modal-footer>
</abp-modal>


<script type="text/javascript">
    $(function() {
        var l = abp.localization.getResource('EnglishApplication');
        var wordId = $('#CurrentWordId').val();

        // Create Modal Manager for New Word Sample
        var createWordSampleModal = new abp.ModalManager({
            viewUrl: abp.appPath + 'WordSamples/CreateWordSampleModal',
            modalClass: 'CreateWordSampleModal'
        });

        var editWordSampleModal = new abp.ModalManager({
            viewUrl: abp.appPath + 'WordSamples/EditWordSampleModal',
            modalClass: 'EditWordSampleModal'
        });
    // Create Word Sample Button Event
    $('#NewWordSampleButton').click(function (e) {
        e.preventDefault();
        console.log("Opening create modal with wordId:", wordId);

        createWordSampleModal.open({
            wordId: wordId  // Make sure this is being passed correctly
        }).then(function() {
            // This runs after the modal is opened
            console.log("Create modal opened, checking WordId field:", $('#WordSample_WordId').val());
        });
    });

        // When a new word sample is created, refresh the samples table
        createWordSampleModal.onResult(function () {
            wordSamplesDataTable.ajax.reload();
        });

        editWordSampleModal.onResult(function () {
            wordSamplesDataTable.ajax.reload();
        });

        console.log("Initializing WordSamplesTable, wordId:", wordId);

        // Check if DataTable is already initialized
        if ($.fn.DataTable.isDataTable('#WordSamplesTable')) {
            $('#WordSamplesTable').DataTable().destroy();
        }

        // Initialize the DataTable
        var wordSamplesDataTable = $('#WordSamplesTable').DataTable(
            abp.libs.datatables.normalizeConfiguration({
                serverSide: true,
                paging: true,
                order: [[0, "asc"]],
                searching: false,
                scrollX: true,
                ajax: function (requestData, callback, settings) {
                    // Create paging parameters for ABP
                    var input = {
                        maxResultCount: requestData.length,
                        skipCount: requestData.start,
                        sorting: requestData.columns[requestData.order[0].column].data + " " +
                            requestData.order[0].dir
                    };

                    console.log("Making API call with wordId:", wordId);

                    if (!wordId) {
                        abp.notify.error(l('WordIdNotProvided'));
                        return;
                    }

                    // Call the service with wordId parameter
                    englishApplication.wordSamples.wordSample.getListByWordId(input, wordId)
                        .then(function (result) {
                            console.log("API response:", result);
                            // Process the result for DataTables
                            callback({
                                recordsTotal: result.totalCount,
                                recordsFiltered: result.totalCount,
                                data: result.items
                            });
                        })
                        .catch(function (error) {
                            console.error("API Error:", error);
                            abp.notify.error("An error occurred while loading word samples");
                        });
                },
                columnDefs: [
                    {
                        title: l('Sample'),
                        data: "sample"
                    },
                    {
                        title: l('Actions'),
                        rowAction: {
                            items: [
                                {
                                    text: l('Edit'),
                                    action: function (data) {
                                        editWordSampleModal.open({
                                            id: data.record.id
                                        });
                                    }
                                },
                                {
                                    text: l('Delete'),
                                    confirmMessage: function (data) {
                                        return l('WordSampleDeletionConfirmationMessage', data.record.sample);
                                    },
                                    action: function (data) {
                                        englishApplication.wordSamples.wordSample
                                            .delete(data.record.id)
                                            .then(function () {
                                                abp.notify.info(l('SuccessfullyDeleted'));
                                                wordSamplesDataTable.ajax.reload();
                                            });
                                    }
                                }
                            ]
                        }
                    }
                ]
            })
        );
    });
</script>